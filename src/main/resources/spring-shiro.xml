<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd">


    <!-- 缓存管理器使用Ehcache实现 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml" />
    </bean>

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="com.infoyb.supplier.common.shiro.CustomHashedCredentialsMatcher">
        <constructor-arg ref="cacheManager"/>
        <!-- 加密算法为MD5 -->
        <property name="hashAlgorithmName" value="MD5"></property>
        <!-- 加密次数 -->
        <property name="hashIterations" value="2"></property>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>


    <!-- 继承自AuthorizingRealm的自定义Realm,即指定Shiro验证用户登录的类为自定义的UserRealm.java -->
    <bean id="userRealm" class="com.infoyb.supplier.common.shiro.UserRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>

    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <!--记住我 -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30天 -->
    </bean>
    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- 会话DAO -->
    <bean id="sessionDAO" class="com.infoyb.supplier.common.shiro.CustomizedSessionDao">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>



    <!-- 会话管理器-->
    <bean id="sessionManager" class="com.infoyb.supplier.common.shiro.CustomizedSessionManager">
        <!-- 设置session过期时间为1小时(单位：毫秒)，默认为30分钟 -->
        <property name="globalSessionTimeout" value="1800000"></property>
        <!-- 删除过期会话 -->
        <property name="deleteInvalidSessions" value="true"/>
        <!-- 扫描session线程,负责清理超时会话 -->
        <property name="sessionValidationSchedulerEnabled" value="true"></property>
        <!-- 去掉浏览器去掉URL中的JSESSIONID -->
        <property name="sessionIdUrlRewritingEnabled" value="false"></property>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <!-- 安全管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 基于Form表单的身份验证过滤器com.synthesis.module.base.shiro.MyFormAuthenticationFilter  -->
    <bean id="formAuthenticationFilter" class="com.infoyb.supplier.common.shiro.CustomFormAuthenticationFilter">
        <property name="usernameParam" value="account" /><!-- 指定登录表单提交的用户名参数名 -->
        <property name="passwordParam" value="password" /><!-- 指定登录表单提交的密码参数名 -->
        <property name="loginUrl" value="/userLogin" /><!-- 指定当身份验证时的登录表单 -->
        <!-- 指定登录成功后重定向的默认地址（默认是“/”）（如果有上一个地址会自动重定向带该地址） -->
        <!-- 		<property name="successUrl" value="/" /> -->
        <!-- 指定登录失败时的request属性key(默认shiroLoginFailure);登录表单得到该错误key显示相应的错误消息 -->
        <property name="failureKeyAttribute" value="shiroLoginFailure" />
    </bean>

    <!-- 验证码过滤器 -->
    <bean id="verifyCodeFitler" class="com.infoyb.supplier.common.shiro.VerifiCodeFilter">
        <property name="jcaptchaEnabled" value="true" /><!-- 是否开启验证 -->
        <property name="jcaptchaParam" value="captcha" /><!--表单提交的验证码参数名 -->
        <property name="failureKeyAttribute" value="shiroLoginFailure" /><!-- 表单验证失败得到的错误key -->
    </bean>

    <!-- Shiro主过滤器 -->
    <!-- Web应用中,Shiro可控制的Web请求必须经过Shiro主过滤器的拦截-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口,这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.html"页面 -->
        <property name="loginUrl" value="/userLogin"/>
        <property name="filters">
            <util:map>
                <entry key="authc" value-ref="formAuthenticationFilter" />
                <entry key="code" value-ref="verifyCodeFitler" />
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /webservice/**=anon
                /assets/**=anon
                /js/**=anon
                /uploadFloder/**=anon
                /favicon.ico=anon
                /captcha.jpg=anon
                /users/queryUser=anon
                /users/queryEmail=anon
                /users/queryPhone=anon
                /users/userSave=anon
                /register.jsp=anon
                /user_activate.jsp=anon
                /user_activatefail.jsp=anon
                /users/emailActivateView=anon
                /users/sendEmail=anon
                /users/send/mail=anon
                /userLogin=authc
                /**=authc
            </value>
        </property>
    </bean>

    <!-- Shiro生命周期处理器 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
    <!-- AOP式方法级权限检查  -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>